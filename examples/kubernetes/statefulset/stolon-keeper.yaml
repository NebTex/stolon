apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: stolon-keeper
  namespace: ${namespace:?}
spec:
  serviceName: "stolon-keeper"
  replicas: 3
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.beta.kubernetes.io/storage-class: slow
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50G
  - metadata:
      name: borg
      annotations:
        volume.beta.kubernetes.io/storage-class: not-important
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50G
  template:
    metadata:
      labels:
        app: stolon-keeper
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.boostport.com/vault-approle: ${namespace:?}-stolon
        pod.boostport.com/vault-init-container: install
        pod.beta.kubernetes.io/init-containers: '[
            {
              "name": "install",
              "image": "boostport/kubernetes-vault-init:0.2.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "VAULT_ROLE_ID",
                  "value": "bf049e69-8a58-7c87-3497-4d29b71e6e30"
                },
                {
                  "name": "CREDENTIALS_PATH",
                  "value": "/secrets"
                }
              ],
              "volumeMounts": [
                {
                  "name": "vault-token",
                  "mountPath": "/secrets"
                }
              ]
            },
            {
              "name": "backup-restore",
              "args": ["restore"],
              "image": "nebtex/backups",
              "imagePullPolicy": "Always",
              "env": [
              {
                "name": "CONSUL_HTTP_ADDR",
                "value": "consul.kv:8500"
              },
                {
                  "name": "APP_NAME",
                  "value": "stolon"
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace",
                      "apiVersion": "v1"
                    }
                  }
                },
                {
                  "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.name",
                        "apiVersion": "v1"
                      }
                    }
                }
              ],
              "volumeMounts": [
                {
                  "name": "vault-token",
                  "mountPath": "/secrets"
                },
                {
                  "name": "data",
                  "mountPath": "/volumes/stolon"
                }, {
                  "name": "borg",
                  "mountPath": "/borg"
                }
            ]
          }
        ]'
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
      - name: vault-token
        emptyDir: {}
      - name: stolon-credentials
        secret:
          secretName: stolon-credentials
          defaultMode: 0400
      - name: entrypoint
        configMap:
          name: stolon-keeper-init
          defaultMode: 0755
      containers:
      - name: backups
        args:
        # backup each hour
        - 0 * * * *
        image: nebtex/backups
        imagePullPolicy: Always
        volumeMounts:
          - name: vault-token
            mountPath: /secrets
          - name: data
            mountPath: /volumes/stolon
          - name: borg
            mountPath: /borg
        env:
        - name: CONSUL_HTTP_ADDR
          value: consul.kv:8500
        - name: APP_NAME
          value: stolon
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: stolon-keeper
        image: sorintlab/stolon:master-pg9.6
        command:
        - /keeper-init-bin/init-keeper.sh
        env:
          - name: STKEEPER_CLUSTER_NAME
            value: ${namespace:?}-stolon
          - name: STKEEPER_STORE_BACKEND
            value: "consul"
          - name: STKEEPER_STORE_ENDPOINTS
            value: "http://consul.kv:8500"
          - name: CONSUL_HTTP_TOKEN
            valueFrom:
              secretKeyRef:
                name: stolon-credentials
                key: CONSUL_HTTP_TOKEN
          - name: STKEEPER_PG_REPL_USERNAME
            value: "repluser"
          - name: STKEEPER_PG_REPL_PASSWORD
            value: "replpassword"
          - name: STKEEPER_PG_SU_USERNAME
            value: "postgres"
          - name: STKEEPER_PG_SU_PASSWORDFILE
            value: "/etc/secrets/stolon/password"
        ports:
          - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /stolon-data
        - name: stolon-credentials
          mountPath: /etc/secrets/stolon
        - name: entrypoint
          mountPath: /keeper-init-bin
